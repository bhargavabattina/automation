{"uid":"84af28bc1756afc2","name":"Test Empty Payer Name Validation","fullName":"testCases.errorMessageValidation_test.TestClientValidation#test_empty_payer_name_validation","historyId":"f32be134b24015a44cb35606e8b44b5a","time":{"start":1742306923344,"stop":1742307044933,"duration":121589},"description":"Test Payer Name Field Validation","descriptionHtml":"<p>Test Payer Name Field Validation</p>\n","status":"broken","statusMessage":"playwright._impl._errors.TargetClosedError: Locator.fill: Target page, context or browser has been closed","statusTrace":"self = <testCases.errorMessageValidation_test.TestClientValidation object at 0x00000279954AB4D0>\npage_with_screenshot = <pageObjects.Client_test.ClientTest object at 0x0000027995969D30>\n\n    @allure.story(\"Payer Name Validations\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Test Empty Payer Name Validation\")\n    @pytest.mark.ui\n    @pytest.mark.critical\n    def test_empty_payer_name_validation(self, page_with_screenshot: ClientTest):\n        \"\"\"Test Payer Name Field Validation\"\"\"\n        try:\n            with allure.step(\"Filling Client Code\"):\n                page_with_screenshot.fill_client_code(\"LPSD1\")\n    \n            with allure.step(\"Selecting Environment\"):\n                page_with_screenshot.select_environment(\"STAGING\")\n    \n            with allure.step(\"Clicking Show Detail\"):\n                page_with_screenshot.click_show_detail()\n    \n            time.sleep(120)\n    \n    \n    \n            with allure.step(\"Entering Payment Details\"):\n>               page_with_screenshot.fill_amount(\"10\")\n\ntestCases\\errorMessageValidation_test.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\Client_test.py:49: in fill_amount\n    self.amount_input.fill(amount)\n.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15808: in fill\n    self._sync(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:208: in fill\n    return await self._frame.fill(self._selector, strict=True, **params)\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:527: in fill\n    await self._channel.send(\"fill\", locals_to_params(locals()))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000002799562CAD0>, cb = <function Channel.send.<locals>.<lambda> at 0x000002799583AB60>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Locator.fill: Target page, context or browser has been closed\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TargetClosedError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1742306919503,"stop":1742306921759,"duration":2256},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client_detail_page","time":{"start":1742306921759,"stop":1742306923342,"duration":1583},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page_with_screenshot","time":{"start":1742306923343,"stop":1742306923343,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Test Payer Name Field Validation","status":"broken","statusMessage":"playwright._impl._errors.TargetClosedError: Locator.fill: Target page, context or browser has been closed","statusTrace":"self = <testCases.errorMessageValidation_test.TestClientValidation object at 0x00000279954AB4D0>\npage_with_screenshot = <pageObjects.Client_test.ClientTest object at 0x0000027995969D30>\n\n    @allure.story(\"Payer Name Validations\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Test Empty Payer Name Validation\")\n    @pytest.mark.ui\n    @pytest.mark.critical\n    def test_empty_payer_name_validation(self, page_with_screenshot: ClientTest):\n        \"\"\"Test Payer Name Field Validation\"\"\"\n        try:\n            with allure.step(\"Filling Client Code\"):\n                page_with_screenshot.fill_client_code(\"LPSD1\")\n    \n            with allure.step(\"Selecting Environment\"):\n                page_with_screenshot.select_environment(\"STAGING\")\n    \n            with allure.step(\"Clicking Show Detail\"):\n                page_with_screenshot.click_show_detail()\n    \n            time.sleep(120)\n    \n    \n    \n            with allure.step(\"Entering Payment Details\"):\n>               page_with_screenshot.fill_amount(\"10\")\n\ntestCases\\errorMessageValidation_test.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\Client_test.py:49: in fill_amount\n    self.amount_input.fill(amount)\n.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15808: in fill\n    self._sync(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:208: in fill\n    return await self._frame.fill(self._selector, strict=True, **params)\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:527: in fill\n    await self._channel.send(\"fill\", locals_to_params(locals()))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000002799562CAD0>, cb = <function Channel.send.<locals>.<lambda> at 0x000002799583AB60>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Locator.fill: Target page, context or browser has been closed\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TargetClosedError","steps":[{"name":"Filling Client Code","time":{"start":1742306923344,"stop":1742306923715,"duration":371},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Selecting Environment","time":{"start":1742306923715,"stop":1742306924041,"duration":326},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Clicking Show Detail","time":{"start":1742306924041,"stop":1742306924832,"duration":791},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Entering Payment Details","time":{"start":1742307044833,"stop":1742307044922,"duration":89},"status":"broken","statusMessage":"playwright._impl._errors.TargetClosedError: Locator.fill: Target page, context or browser has been closed\n","statusTrace":"  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\testCases\\errorMessageValidation_test.py\", line 35, in test_empty_payer_name_validation\n    page_with_screenshot.fill_amount(\"10\")\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\pageObjects\\Client_test.py\", line 49, in fill_amount\n    self.amount_input.fill(amount)\n    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 15808, in fill\n    self._sync(\n    ~~~~~~~~~~^\n        self._impl_obj.fill(\n        ^^^^^^^^^^^^^^^^^^^^\n            value=value, timeout=timeout, noWaitAfter=no_wait_after, force=force\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n    )\n    ^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py\", line 208, in fill\n    return await self._frame.fill(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 527, in fill\n    await self._channel.send(\"fill\", locals_to_params(locals()))\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<2 lines>...\n    )\n    ^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5e9cd5f4653b5548","name":"Exception Details","source":"5e9cd5f4653b5548.txt","type":"text/plain","size":61},{"uid":"6b092974d40ee6c6","name":"stdout","source":"6b092974d40ee6c6.txt","type":"text/plain","size":69}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"page_with_screenshot::0","time":{"start":1742307045357,"stop":1742307045389,"duration":32},"status":"broken","statusMessage":"playwright._impl._errors.TargetClosedError: Page.screenshot: Target page, context or browser has been closed\n","statusTrace":"  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n    ~~~~^^^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\testCases\\conftest.py\", line 80, in page_with_screenshot\n    client_detail_page.page.screenshot(full_page=True),\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 9778, in screenshot\n    self._sync(\n    ~~~~~~~~~~^\n        self._impl_obj.screenshot(\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<13 lines>...\n        )\n        ^\n    )\n    ^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_page.py\", line 789, in screenshot\n    encoded_binary = await self._channel.send(\"screenshot\", params)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<2 lines>...\n    )\n    ^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"client_detail_page::0","time":{"start":1742307045393,"stop":1742307045420,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser::0","time":{"start":1742307045423,"stop":1742307045859,"duration":436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Payer Name Validations"},{"name":"severity","value":"critical"},{"name":"feature","value":"Error Message Validations"},{"name":"epic","value":"Payment Gateway"},{"name":"tag","value":"critical"},{"name":"tag","value":"ui"},{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"errorMessageValidation_test"},{"name":"subSuite","value":"TestClientValidation"},{"name":"host","value":"SRS-CL-009"},{"name":"thread","value":"31864-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.errorMessageValidation_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["critical","ui"]},"source":"84af28bc1756afc2.json","parameterValues":[]}