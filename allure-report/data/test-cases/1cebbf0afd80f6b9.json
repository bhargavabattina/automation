{"uid":"1cebbf0afd80f6b9","name":"Test Empty Payer Name Validation","fullName":"testCases.errorMessageValidation_test.TestClientValidation#test_empty_payer_name_validation","historyId":"f32be134b24015a44cb35606e8b44b5a","time":{"start":1742294094739,"stop":1742294094739,"duration":0},"description":"Test Payer Name Field Validation","descriptionHtml":"<p>Test Payer Name Field Validation</p>\n","status":"broken","statusMessage":"NameError: name 'cloudscraper' is not defined","statusTrace":"@pytest.fixture(scope=\"function\")\n    def browser():\n        \"\"\"Fixture to launch the browser, bypass Cloudflare, and create a new context\"\"\"\n        with sync_playwright() as p:\n            browser = p.chromium.launch(headless=False, slow_mo=300)\n    \n            # Create video directory\n            video_dir = \"videos/\"\n            if not os.path.exists(video_dir):\n                os.makedirs(video_dir, exist_ok=True)\n            print(f\"\uD83C\uDFA5 Video directory: {os.path.abspath(video_dir)}\")\n    \n            # Step 1: Use cloudscraper to get Cloudflare cookies\n>           scraper = cloudscraper.create_scraper()\nE           NameError: name 'cloudscraper' is not defined\n\ntestCases\\conftest.py:38: NameError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1742294094742,"stop":1742294097147,"duration":2405},"status":"broken","statusMessage":"NameError: name 'cloudscraper' is not defined\n","statusTrace":"  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\testCases\\conftest.py\", line 38, in browser\n    scraper = cloudscraper.create_scraper()\n              ^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"attachmentStep":false,"hasContent":true,"stepsCount":0}],"testStage":{"description":"Test Payer Name Field Validation","status":"broken","statusMessage":"NameError: name 'cloudscraper' is not defined","statusTrace":"@pytest.fixture(scope=\"function\")\n    def browser():\n        \"\"\"Fixture to launch the browser, bypass Cloudflare, and create a new context\"\"\"\n        with sync_playwright() as p:\n            browser = p.chromium.launch(headless=False, slow_mo=300)\n    \n            # Create video directory\n            video_dir = \"videos/\"\n            if not os.path.exists(video_dir):\n                os.makedirs(video_dir, exist_ok=True)\n            print(f\"\uD83C\uDFA5 Video directory: {os.path.abspath(video_dir)}\")\n    \n            # Step 1: Use cloudscraper to get Cloudflare cookies\n>           scraper = cloudscraper.create_scraper()\nE           NameError: name 'cloudscraper' is not defined\n\ntestCases\\conftest.py:38: NameError","steps":[],"attachments":[{"uid":"a512526e939d50e3","name":"stdout","source":"a512526e939d50e3.txt","type":"text/plain","size":69}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"feature","value":"Error Message Validations"},{"name":"severity","value":"critical"},{"name":"epic","value":"Payment Gateway"},{"name":"story","value":"Payer Name Validations"},{"name":"tag","value":"critical"},{"name":"tag","value":"ui"},{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"errorMessageValidation_test"},{"name":"subSuite","value":"TestClientValidation"},{"name":"host","value":"SRS-CL-009"},{"name":"thread","value":"27804-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.errorMessageValidation_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["critical","ui"]},"source":"1cebbf0afd80f6b9.json","parameterValues":[]}