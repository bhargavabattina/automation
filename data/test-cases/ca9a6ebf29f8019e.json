{"uid":"ca9a6ebf29f8019e","name":"Wrong Login Credentials Validation","fullName":"testCases.login_test.TestLoginValidation#test_wrong_login","historyId":"27649a8c536428e55be848daf347b996","time":{"start":1743492367141,"stop":1743492398252,"duration":31111},"description":"Test Payer Name Field Validation","descriptionHtml":"<p>Test Payer Name Field Validation</p>\n","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.text_content: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"heading\", name=\"Dashboard\")","statusTrace":"self = <testCases.login_test.TestLoginValidation object at 0x0000023EC248B9D0>, page_with_screenshot = <Page url='https://settlepaisa-internal.sabpaisa.in/sign-in'>\n\n    @allure.story(\"Login Function Validations\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Wrong Login Credentials Validation\")\n    @pytest.mark.ui\n    @pytest.mark.critical\n    def test_wrong_login(self, page_with_screenshot):\n        \"\"\"Test Payer Name Field Validation\"\"\"\n        login_page = LoginPage(page_with_screenshot)\n        try:\n            with allure.step(\"Filling Username\"):\n                login_page.fill_email(\"bala.subrahmanyam@sabpaisa.in\")\n    \n            with allure.step(\"Filling Password\"):\n                login_page.fill_password(\"Bal\")\n    \n            with allure.step(\"Clicking Login Button\"):\n                login_page.click_login()\n    \n            with allure.step(\"Verifying Dashboard \"):\n                expected_text = \"Dashboard\"\n    \n                try:\n>                   actual_text = login_page.get_valid_message_text()\n\ntestCases\\login_test.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\loginpage.py:38: in get_valid_message_text\n    return self.valid_message.text_content()\n.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:17621: in text_content\n    self._sync(self._impl_obj.text_content(timeout=timeout))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:616: in text_content\n    return await self._frame.text_content(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:613: in text_content\n    return await self._channel.send(\"textContent\", locals_to_params(locals()))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x0000023EC268FC50>, cb = <function Channel.send.<locals>.<lambda> at 0x0000023EC2978D60>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.text_content: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"heading\", name=\"Dashboard\")\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1743492364313,"stop":1743492365556,"duration":1243},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page","time":{"start":1743492365556,"stop":1743492367140,"duration":1584},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page_with_screenshot","time":{"start":1743492367140,"stop":1743492367140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Test Payer Name Field Validation","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.text_content: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"heading\", name=\"Dashboard\")","statusTrace":"self = <testCases.login_test.TestLoginValidation object at 0x0000023EC248B9D0>, page_with_screenshot = <Page url='https://settlepaisa-internal.sabpaisa.in/sign-in'>\n\n    @allure.story(\"Login Function Validations\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Wrong Login Credentials Validation\")\n    @pytest.mark.ui\n    @pytest.mark.critical\n    def test_wrong_login(self, page_with_screenshot):\n        \"\"\"Test Payer Name Field Validation\"\"\"\n        login_page = LoginPage(page_with_screenshot)\n        try:\n            with allure.step(\"Filling Username\"):\n                login_page.fill_email(\"bala.subrahmanyam@sabpaisa.in\")\n    \n            with allure.step(\"Filling Password\"):\n                login_page.fill_password(\"Bal\")\n    \n            with allure.step(\"Clicking Login Button\"):\n                login_page.click_login()\n    \n            with allure.step(\"Verifying Dashboard \"):\n                expected_text = \"Dashboard\"\n    \n                try:\n>                   actual_text = login_page.get_valid_message_text()\n\ntestCases\\login_test.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\loginpage.py:38: in get_valid_message_text\n    return self.valid_message.text_content()\n.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:17621: in text_content\n    self._sync(self._impl_obj.text_content(timeout=timeout))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:616: in text_content\n    return await self._frame.text_content(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:613: in text_content\n    return await self._channel.send(\"textContent\", locals_to_params(locals()))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x0000023EC268FC50>, cb = <function Channel.send.<locals>.<lambda> at 0x0000023EC2978D60>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.text_content: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"heading\", name=\"Dashboard\")\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TimeoutError","steps":[{"name":"Filling Username","time":{"start":1743492367141,"stop":1743492367515,"duration":374},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Filling Password","time":{"start":1743492367515,"stop":1743492367873,"duration":358},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Clicking Login Button","time":{"start":1743492367873,"stop":1743492368232,"duration":359},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verifying Dashboard ","time":{"start":1743492368232,"stop":1743492398248,"duration":30016},"status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.text_content: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"heading\", name=\"Dashboard\")\n\n","statusTrace":"  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\testCases\\login_test.py\", line 61, in test_wrong_login\n    actual_text = login_page.get_valid_message_text()\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\pageObjects\\loginpage.py\", line 38, in get_valid_message_text\n    return self.valid_message.text_content()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 17621, in text_content\n    self._sync(self._impl_obj.text_content(timeout=timeout))\n    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py\", line 616, in text_content\n    return await self._frame.text_content(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n    )\n    ^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 613, in text_content\n    return await self._channel.send(\"textContent\", locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<2 lines>...\n    )\n    ^\n  File \"C:\\Users\\Bhargava\\PycharmProjects\\newpg\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8966ed00af4c18d3","name":"Exception Details","source":"8966ed00af4c18d3.txt","type":"text/plain","size":115},{"uid":"e98eeb0abf9d8019","name":"stdout","source":"e98eeb0abf9d8019.txt","type":"text/plain","size":69}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"page_with_screenshot::0","time":{"start":1743492398370,"stop":1743492400520,"duration":2150},"status":"passed","steps":[],"attachments":[{"uid":"71c3006f7c9cc8f0","name":"Fail Screenshot","source":"71c3006f7c9cc8f0.png","type":"image/png","size":99350},{"uid":"26b43ed02eac0cea","name":"Test Execution Video","source":"26b43ed02eac0cea.webm","type":"video/webm","size":593333}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"page::0","time":{"start":1743492400522,"stop":1743492400542,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser::0","time":{"start":1743492400545,"stop":1743492400774,"duration":229},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Login Function Validations"},{"name":"feature","value":"Authentication"},{"name":"epic","value":"Settle Paisa"},{"name":"severity","value":"critical"},{"name":"tag","value":"critical"},{"name":"tag","value":"ui"},{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"login_test"},{"name":"subSuite","value":"TestLoginValidation"},{"name":"host","value":"SRS-CL-009"},{"name":"thread","value":"15060-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.login_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["critical","ui"]},"source":"ca9a6ebf29f8019e.json","parameterValues":[]}